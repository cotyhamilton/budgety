name: CI

on:
  push:
    branches: [ "main" ]
    tags: ["*"]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4
    - name: Setup buildx
      uses: docker/setup-buildx-action@v3
    - name: Setup node 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'yarn'
    - name: Install dependencies
      run: yarn install --immutable
    - name: Lint
      run: yarn lint
    - name: Build
      run: yarn build
    - name: Unit tests
      run: yarn test:coverage
    - name: Install E2E Test Dependencies
      run: yarn playwright install --with-deps
    - name: E2E tests
      run: yarn test:e2e
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: test-results/
    - name: Build image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Container Sanity Check
      run: |
        docker run -d -p 80:80 ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        curl http://localhost | grep -q budgety
    - name: Auth ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    - name: Push Prerelease Image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:next
        sbom: true
        push: true
      if: github.ref == 'refs/heads/main'
    - name: Push Release Image
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
        sbom: true
        push: true
      if: startsWith(github.ref, 'refs/tags/')
